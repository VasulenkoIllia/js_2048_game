{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar button = document.querySelector(\".button\");\nvar messages = document.querySelectorAll(\".message\");\nvar score = document.querySelector(\".game-score\");\nvar directions = [\n    \"right\",\n    \"left\",\n    \"up\",\n    \"down\"\n];\nvar game = {\n    cells: document.querySelectorAll(\".field-cell\"),\n    field: document.querySelector(\"tbody\").children,\n    score: 0,\n    getRandomNumber: function(number) {\n        return Math.floor(Math.random() * number);\n    },\n    generateRandomCell: function() {\n        var luckyNumber = this.getRandomNumber(10);\n        var randomRow = this.getRandomNumber(this.fieldArr.length);\n        var randomCell = this.getRandomNumber(this.fieldArr.length);\n        if (this.fieldArr[randomRow][randomCell] === \"\") {\n            this.fieldArr[randomRow][randomCell] = luckyNumber === 4 ? 4 : 2;\n            score.textContent = this.score;\n            for(var i = 0; i < this.fieldArr.length; i++)for(var j = 0; j < this.fieldArr.length; j++){\n                var arrItem = this.fieldArr[i][j];\n                var cell = this.field[i].children[j];\n                cell.textContent = arrItem;\n                cell.className = arrItem === \"\" ? \"field-cell\" : \"field-cell field-cell--\".concat(arrItem);\n                if (arrItem === 2048) {\n                    messages[1].classList.remove(\"hidden\");\n                    document.body.removeEventListener(\"keydown\", game.start);\n                }\n            }\n        } else this.generateRandomCell();\n    },\n    move: function(direction) {\n        for(var i = 0; i < this.fieldArr.length; i++){\n            var fieldPart = void 0;\n            if (direction === directions[0] || direction === directions[1]) fieldPart = this.fieldArr[i];\n            else fieldPart = [\n                this.fieldArr[0][i],\n                this.fieldArr[1][i],\n                this.fieldArr[2][i],\n                this.fieldArr[3][i]\n            ];\n            var filteredPart = fieldPart.filter(function(number) {\n                return number;\n            });\n            var emptyStringsNumber = fieldPart.length - filteredPart.length;\n            var emptyStrings = Array(emptyStringsNumber).fill(\"\");\n            var newFieldPart = direction === directions[0] || direction === directions[3] ? emptyStrings.concat(filteredPart) : filteredPart.concat(emptyStrings);\n            if (direction === directions[0] || direction === directions[1]) this.fieldArr[i] = newFieldPart;\n            if (direction === directions[2] || direction === directions[3]) {\n                this.fieldArr[0][i] = newFieldPart[0];\n                this.fieldArr[1][i] = newFieldPart[1];\n                this.fieldArr[2][i] = newFieldPart[2];\n                this.fieldArr[3][i] = newFieldPart[3];\n            }\n        }\n    },\n    combineRow: function() {\n        for(var i = 0; i < this.fieldArr.length; i++){\n            var row = this.fieldArr[i];\n            for(var j = 0; j < row.length - 1; j++)if (row[j] > 0 && row[j] === row[j + 1]) {\n                row[j] *= 2;\n                this.score += row[j];\n                row[j + 1] = \"\";\n            }\n        }\n    },\n    combineColumn: function() {\n        for(var i = 0; i < this.fieldArr.length - 1; i++){\n            for(var j = 0; j < this.fieldArr[i].length; j++)if (+this.fieldArr[i][j] > 0 && this.fieldArr[i][j] === this.fieldArr[i + 1][j]) {\n                this.fieldArr[i][j] *= 2;\n                this.score += this.fieldArr[i][j];\n                this.fieldArr[i + 1][j] = \"\";\n            }\n        }\n    },\n    canMoveRight: function() {\n        for(var i = 0; i < this.fieldArr.length; i++){\n            var row = this.fieldArr[i];\n            for(var j = 0; j < row.length - 1; j++){\n                if (!!row[j] && row[j] === row[j + 1] || !!row[j] && !row[j + 1]) return true;\n            }\n        }\n        return false;\n    },\n    canMoveLeft: function() {\n        for(var i = 0; i < this.fieldArr.length; i++){\n            var row = this.fieldArr[i];\n            for(var j = 1; j < row.length; j++){\n                if (row[j] && row[j] === row[j - 1] || row[j] && !row[j - 1]) return true;\n            }\n        }\n        return false;\n    },\n    canMoveUp: function() {\n        for(var i = 0; i < this.fieldArr.length; i++){\n            var column = [\n                this.fieldArr[0][i],\n                this.fieldArr[1][i],\n                this.fieldArr[2][i],\n                this.fieldArr[3][i]\n            ];\n            for(var j = 1; j < column.length; j++){\n                if (column[j] && column[j] === column[j - 1] || column[j] && !column[j - 1]) return true;\n            }\n        }\n        return false;\n    },\n    canMoveDown: function() {\n        for(var i = 0; i < this.fieldArr.length; i++){\n            var column = [\n                this.fieldArr[0][i],\n                this.fieldArr[1][i],\n                this.fieldArr[2][i],\n                this.fieldArr[3][i]\n            ];\n            for(var j = 0; j < column.length - 1; j++){\n                if (column[j] && column[j] === column[j + 1] || column[j] && !column[j + 1]) return true;\n            }\n        }\n        return false;\n    },\n    checkForLose: function() {\n        if (!game.canMoveDown() && !game.canMoveUp() && !game.canMoveRight() && !game.canMoveLeft()) {\n            messages[0].classList.remove(\"hidden\");\n            document.body.removeEventListener(\"keydown\", game.start);\n            return true;\n        }\n        return false;\n    },\n    start: function(e) {\n        switch(e.code){\n            case \"ArrowRight\":\n                if (game.canMoveRight()) {\n                    game.move(directions[0]);\n                    game.combineRow();\n                    game.move(directions[0]);\n                    game.generateRandomCell();\n                }\n                game.checkForLose();\n                break;\n            case \"ArrowLeft\":\n                if (game.canMoveLeft()) {\n                    game.move(directions[1]);\n                    game.combineRow();\n                    game.move(directions[1]);\n                    game.generateRandomCell();\n                }\n                game.checkForLose();\n                break;\n            case \"ArrowUp\":\n                if (game.canMoveUp()) {\n                    game.move(directions[2]);\n                    game.combineColumn();\n                    game.move(directions[2]);\n                    game.generateRandomCell();\n                }\n                game.checkForLose();\n                break;\n            case \"ArrowDown\":\n                if (game.canMoveDown()) {\n                    game.move(directions[3]);\n                    game.combineColumn();\n                    game.move(directions[3]);\n                    game.generateRandomCell();\n                }\n                game.checkForLose();\n                break;\n        }\n    }\n};\nbutton.addEventListener(\"click\", function() {\n    game.fieldArr = [\n        [\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        [\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        [\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        [\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ]\n    ];\n    button.classList.remove(\"start\");\n    button.classList.add(\"restart\");\n    button.textContent = \"Restart\";\n    messages.forEach(function(message) {\n        return message.classList.add(\"hidden\");\n    });\n    game.score = 0;\n    game.generateRandomCell();\n    game.generateRandomCell();\n    document.body.addEventListener(\"keydown\", game.start);\n});\n\n//# sourceMappingURL=index.fd2f692b.js.map\n","'use strict';\n\nconst button = document.querySelector('.button');\nconst messages = document.querySelectorAll('.message');\nconst score = document.querySelector('.game-score');\nconst directions = ['right', 'left', 'up', 'down'];\nconst game = {\n  cells: document.querySelectorAll('.field-cell'),\n  field: document.querySelector('tbody').children,\n  score: 0,\n\n  getRandomNumber(number) {\n    return Math.floor(Math.random() * number);\n  },\n\n  generateRandomCell() {\n    const luckyNumber = this.getRandomNumber(10);\n    const randomRow = this.getRandomNumber(this.fieldArr.length);\n    const randomCell = this.getRandomNumber(this.fieldArr.length);\n\n    if (this.fieldArr[randomRow][randomCell] === '') {\n      this.fieldArr[randomRow][randomCell] = luckyNumber === 4 ? 4 : 2;\n\n      score.textContent = this.score;\n\n      for (let i = 0; i < this.fieldArr.length; i++) {\n        for (let j = 0; j < this.fieldArr.length; j++) {\n          const arrItem = this.fieldArr[i][j];\n          const cell = this.field[i].children[j];\n\n          cell.textContent = arrItem;\n\n          cell.className =\n            arrItem === '' ? 'field-cell' : `field-cell field-cell--${arrItem}`;\n\n          if (arrItem === 2048) {\n            messages[1].classList.remove('hidden');\n\n            document.body.removeEventListener('keydown', game.start);\n          }\n        }\n      }\n    } else {\n      this.generateRandomCell();\n    }\n  },\n\n  move(direction) {\n    for (let i = 0; i < this.fieldArr.length; i++) {\n      let fieldPart;\n\n      if (direction === directions[0] || direction === directions[1]) {\n        fieldPart = this.fieldArr[i];\n      } else {\n        fieldPart = [\n          this.fieldArr[0][i],\n          this.fieldArr[1][i],\n          this.fieldArr[2][i],\n          this.fieldArr[3][i],\n        ];\n      }\n\n      const filteredPart = fieldPart.filter((number) => number);\n      const emptyStringsNumber = fieldPart.length - filteredPart.length;\n      const emptyStrings = Array(emptyStringsNumber).fill('');\n      const newFieldPart =\n        direction === directions[0] || direction === directions[3]\n          ? emptyStrings.concat(filteredPart)\n          : filteredPart.concat(emptyStrings);\n\n      if (direction === directions[0] || direction === directions[1]) {\n        this.fieldArr[i] = newFieldPart;\n      }\n\n      if (direction === directions[2] || direction === directions[3]) {\n        this.fieldArr[0][i] = newFieldPart[0];\n        this.fieldArr[1][i] = newFieldPart[1];\n        this.fieldArr[2][i] = newFieldPart[2];\n        this.fieldArr[3][i] = newFieldPart[3];\n      }\n    }\n  },\n\n  combineRow() {\n    for (let i = 0; i < this.fieldArr.length; i++) {\n      const row = this.fieldArr[i];\n\n      for (let j = 0; j < row.length - 1; j++) {\n        if (row[j] > 0 && row[j] === row[j + 1]) {\n          row[j] *= 2;\n\n          this.score += row[j];\n          row[j + 1] = '';\n        }\n      }\n    }\n  },\n\n  combineColumn() {\n    for (let i = 0; i < this.fieldArr.length - 1; i++) {\n      for (let j = 0; j < this.fieldArr[i].length; j++) {\n        if (\n          +this.fieldArr[i][j] > 0 &&\n          this.fieldArr[i][j] === this.fieldArr[i + 1][j]\n        ) {\n          this.fieldArr[i][j] *= 2;\n\n          this.score += this.fieldArr[i][j];\n          this.fieldArr[i + 1][j] = '';\n        }\n      }\n    }\n  },\n\n  canMoveRight() {\n    for (let i = 0; i < this.fieldArr.length; i++) {\n      const row = this.fieldArr[i];\n\n      for (let j = 0; j < row.length - 1; j++) {\n        if ((!!row[j] && row[j] === row[j + 1]) || (!!row[j] && !row[j + 1])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  canMoveLeft() {\n    for (let i = 0; i < this.fieldArr.length; i++) {\n      const row = this.fieldArr[i];\n\n      for (let j = 1; j < row.length; j++) {\n        if ((row[j] && row[j] === row[j - 1]) || (row[j] && !row[j - 1])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  canMoveUp() {\n    for (let i = 0; i < this.fieldArr.length; i++) {\n      const column = [\n        this.fieldArr[0][i],\n        this.fieldArr[1][i],\n        this.fieldArr[2][i],\n        this.fieldArr[3][i],\n      ];\n\n      for (let j = 1; j < column.length; j++) {\n        if (\n          (column[j] && column[j] === column[j - 1]) ||\n          (column[j] && !column[j - 1])\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  canMoveDown() {\n    for (let i = 0; i < this.fieldArr.length; i++) {\n      const column = [\n        this.fieldArr[0][i],\n        this.fieldArr[1][i],\n        this.fieldArr[2][i],\n        this.fieldArr[3][i],\n      ];\n\n      for (let j = 0; j < column.length - 1; j++) {\n        if (\n          (column[j] && column[j] === column[j + 1]) ||\n          (column[j] && !column[j + 1])\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  checkForLose() {\n    if (\n      !game.canMoveDown() &&\n      !game.canMoveUp() &&\n      !game.canMoveRight() &&\n      !game.canMoveLeft()\n    ) {\n      messages[0].classList.remove('hidden');\n\n      document.body.removeEventListener('keydown', game.start);\n\n      return true;\n    }\n\n    return false;\n  },\n\n  start(e) {\n    switch (e.code) {\n      case 'ArrowRight':\n        if (game.canMoveRight()) {\n          game.move(directions[0]);\n          game.combineRow();\n          game.move(directions[0]);\n          game.generateRandomCell();\n        }\n        game.checkForLose();\n        break;\n\n      case 'ArrowLeft':\n        if (game.canMoveLeft()) {\n          game.move(directions[1]);\n          game.combineRow();\n          game.move(directions[1]);\n          game.generateRandomCell();\n        }\n        game.checkForLose();\n        break;\n\n      case 'ArrowUp':\n        if (game.canMoveUp()) {\n          game.move(directions[2]);\n          game.combineColumn();\n          game.move(directions[2]);\n          game.generateRandomCell();\n        }\n        game.checkForLose();\n        break;\n\n      case 'ArrowDown':\n        if (game.canMoveDown()) {\n          game.move(directions[3]);\n          game.combineColumn();\n          game.move(directions[3]);\n          game.generateRandomCell();\n        }\n        game.checkForLose();\n        break;\n    }\n  },\n};\n\nbutton.addEventListener('click', () => {\n  game.fieldArr = [\n    ['', '', '', ''],\n    ['', '', '', ''],\n    ['', '', '', ''],\n    ['', '', '', ''],\n  ];\n  button.classList.remove('start');\n  button.classList.add('restart');\n  button.textContent = 'Restart';\n  messages.forEach((message) => message.classList.add('hidden'));\n  game.score = 0;\n  game.generateRandomCell();\n  game.generateRandomCell();\n  document.body.addEventListener('keydown', game.start);\n});\n"],"names":["button","document","querySelector","messages","querySelectorAll","score","game","cells","field","children","getRandomNumber","number","Math","floor","random","generateRandomCell","luckyNumber","randomRow","fieldArr","length","randomCell","textContent","i","j","arrItem","cell","className","concat","classList","remove","body","removeEventListener","start","move","direction","fieldPart","filteredPart","filter","emptyStrings","Array","fill","newFieldPart","combineRow","row","combineColumn","canMoveRight","canMoveLeft","canMoveUp","column","canMoveDown","checkForLose","e","code","addEventListener","add","forEach","message"],"version":3,"file":"index.fd2f692b.js.map"}